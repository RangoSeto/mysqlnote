=>Data Relationships
(i)ONE to ONE Relationships (1:1)
(ii)ONE to MANY Relationships (1:n)
(iii)MANY to MANY Relationships (n:n)


students 1:1 studentinfos
teachers 1:n classes
enrollments n:n 
reviews n:n


DLT Co.,ltd


CREATE TABLE IF NOT EXISTS students(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    regcode VARCHAR(10) NOT NULL UNIQUE,
    firstname VARCHAR(20) NOT NULL,
    lastname VARCHAR(20),
    gender ENUM('1','0') NOT NULL,
    dob DATE NOT NULL,
    email VARCHAR(50) NOT NULL UNIQUE,
    password VARCHAR(255) NOT NULL,
    status ENUM('ENABLE','DISABLE','TERMINATE') DEFAULT 'ENABLE',
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);


INSERT INTO students(regcode,firstname,lastname,gender,dob,email,password)
VALUES('wdf1001','Aung','Aung',1,"2000-01-31",'aungaung@gmail.com','12345'),
('wdf1002','Su','Su',0,"2000-02-28",'susu@gmail.com','12345');

SELECT * FROM students;

DROP TABLE IF EXISTS students;


Note : Role 1 = students , Role 2 = teacher

CREATE TABLE IF NOT EXISTS studentinfos(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    coverphoto VARCHAR(255),
    profilephoto VARCHAR(255),
    phone VARCHAR(15) NOT NULL UNIQUE,
    address VARCHAR(100) NOT NULL,
    role INT() DEFAULT 1,
    student_id INT,
    FOREIGN KEY(student_id) REFERENCES students('id') ON UPDATE CASCADE ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS subjects(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    img VARCHAR(255),
    course VARCHAR(100) NOT NULL UNIQUE,
    subjecttype SET('THEORY','PROJECT') NOT NULL,
    fee DECIMAL(10,2) DEFAULT 0,
    requirement VARCHAR(100)
);

CREATE TBALE IF NOT EXISTS teachers(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    name VARCHAR(30) NOT NULL,
    phone VARCHAR(15) NOT NULL UNIQUE,
);

CREATE TABLE IF NOT EXISTS classes(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    subject_id INT,
    batch INT NOT NULL,
    fee DECIMAL(10,2) DEFAULT 0,
    startdate DATE NOT NULL,
    week SET('sun','mon','tue','wed','thu','fri','sat') NOT NULL,
    starttime TIME NOT NULL,
    endtime TIME NOT NULL,
    teacher_id INT,
    FOREIGN KEY('subject_id') REFERENCES subjects('id'),
    FOREIGN KEY('teacher_id') REFERENCES teachers('id')
);

CREATE TABLE IF NOT EXISTS attendances(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    class_id INT,
    student_id INT,
    attcode VARCHAR(5) NOT NULL,
    remark VARCHAR(100),
    created_at TIMESTAMP DEFAULT NOW(),
    FOREIGN KEY('class_id') REFERENCES classes('id'),
    FOREIGN KEY('student_id') REFERENCES students('id')
);


CREATE TABLE IF NOT EXISTS enrollments(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    class_id INT,
    student_id INT,
    paymentmethod ENUM('wire','kpay','cbpay','visa','wavemoney') NOT NULL,
    status ENUM('enable','disable') DEFAULT 'enable',
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY('class_id') REFERENCES classes('id') ON UPDATE CASCADE,
    FOREIGN KEY('student_id') REFERENCES students('id') ON UPDATE CASCADE
);


CREATE TABLE IF NOT EXISTS datastorages(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    url VARCHAR(255) NOT NULL,
    class_id INT,
    enrollments_id INT,
    classdate DATE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY('class_id') REFERENCES classes('id') ON UPDATE CASCADE,
    FOREIGN KEY('enrollments_id') REFERENCES enrollments('id') ON UPDATE CASCADE
);

CREATE TABLE IF NOT EXISTS reviews(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    rating INT NOT NULL CHECK(rating <= 5),
    remark VARCHAR(150),
    class_id INT,
    student_id INT,
    created_at TIMESTAMP DEFAULT NOW(),
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY('class_id') REFERENCES classes('id') ON UPDATE CASCADE,
    FOREIGN KEY('student_id') REFERENCES students('id') ON UPDATE CASCADE
);




---------------------------------------------


=>Laundry Services

CREATE TABLE IF NOT EXISTS customers(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(225),
    email VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS customersinfos(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    phonenumber INT,
    address VARCHAR(255),
    customer_id INT,
    FOREIGN KEY(customer_id) REFERENCES customers(id)
);

CREATE TABLE IF NOT EXISTS typeofclothes(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    items VARCHAR(255),
    priceperitem DECIMAL(10,2)
);

CREATE TABLE IF NOT EXISTS laundryservices(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    servicename VARCHAR(255),
    priceperservice VARCHAR(255)
);

CREATE TABLE IF NOT EXISTS orderitems(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    qty INT NOT NULL,
    customer_id INT,
    item_id INT,
    FOREIGN KEY(customer_id) REFERENCES customers(id),
    FOREIGN KEY(item_id) REFERENCES items(id)
);

CREATE TBALE IF NOT EXISTS orders(
    id INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
    pickupdate DATE,
    deliverydate DATE,
    payments ENUM('visa','cod','mpu'),
    amount DECIMAL(10,2),
    student_id INT,
    FOREIGN KEY(student_id) REFERENCES students(id)
);


