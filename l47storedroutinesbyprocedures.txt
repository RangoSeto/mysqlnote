=>Stored Routines
(i) PROCEDURE (we can call stored procedures)
    (a) IN = Input Parameters
    (b) OUT = Output Parameters 
    (c) INOUT = Inout Parameters

(ii) FUNCTION
    (a) Build In Function 
    (b) User Defined Function
        (i) Input Parameter(function always return only 1 time. / function can be with parameter or without parameter)

-----------------------------------------------------------------------------------------------------------------------------------

(i) PROCEDURE (we can call stored procedures)

CREATE TABLE IF NOT EXISTS capitals(
    id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    date DATE NOT NULL,
    name VARCHAR(50) NOT NULL,
    amount DECIMAL(10,2) NOT NULL,
    payment ENUM('MMK','USD') NOT NULL,
    accounts ENUM('credit','debit') NOT NULL
);

DESC capitals;


INSERT INTO capitals(date,name,amount,payment,accounts)
VALUES ('2023/1/20','mr.tin','500000',1,1),
('2023/1/31','ms.july','300000',1,1),
('2023/2/1','ms.july','200000',1,1),
('2023/2/1','mr.tin','1000',2,1),
('2023/2/2','ms.july','3000',2,1),
('2023/2/3','mr.tin','1000',2,1),
('2023/2/4','mr.tin','1000',2,1),
('2023/2/28','mr.tin','200000',1,2);

SELECT * FROM capitals;


=>Capital By MMK
SELECT name,SUM(amount),payment,accounts FROM capitals
WHERE accounts = "credit" AND payment = "MMK"
GROUP BY name;


=>Capital By USD
SELECT name,SUM(amount),payment,accounts FROM capitals
WHERE accounts = "credit" AND payment = "USD"
GROUP BY name;


CREATE OR REPLACE VIEW vw_capitalbymmk AS 
SELECT name,SUM(amount),payment,accounts FROM capitals
WHERE accounts = "credit" AND payment = "MMK"
GROUP BY name;

CREATE OR REPLACE VIEW vw_capitalbyusd AS 
SELECT name,SUM(amount),payment,accounts FROM capitals
WHERE accounts = "credit" AND payment = "USD"
GROUP BY name;

SHOW FULL TABLES WHERE TABLE_TYPE LIKE 'VIEW';


SELECT * FROM vw_capitalbymmk;
SELECT * FROM vw_capitalbyusd;


--------------------------------------------------------------

//parameter ပေးပြီး dataဆွဲထုတ်တာ (triggerရေးနည်းနဲ့တူ)
=>Capital By Account

SELECT date,name,amount,payment,accounts FROM capitals
WHERE accounts = "credit"
ORDER BY date DESC;

SELECT date,name,amount,payment,accounts FROM capitals
WHERE accounts = "debit"
ORDER BY date DESC;



DELIMITER //

    CREATE PROCEDURE capitalreportaccounts_proc(p_acc VARCHAR(10))
    BEGIN
        SELECT date,name,amount,payment,accounts FROM capitals
        WHERE accounts = p_acc
        ORDER BY date DESC;
    END; //

DELIMITER ;

// (ဒီလိုဆွဲထည့်ကြည့်ရင်တော့မမြင်ရ)
SHOW TABLES;
SHOW FULL TABLES;

=>List all procedures
SHOW PROCEDURE STATUS WHERE DB = "wdf7053"

=>Drop procedures
DROP PROCEDURE IF EXISTS capitalreportaccounts_proc;


// procedures (function) ကိုပြန်ခေါ်သုံးတာ
**error (parameter မပါလို့)
CALL capitalreportaccounts_proc();

CALL capitalreportaccounts_proc("credit");
CALL capitalreportaccounts_proc("DEBIT);

--------------------------------------------------------------

SELECT date,name,amount,payment,accounts FROM capitals
WHERE date = "2023-1-31";


DELIMITER //

    CREATE PROCEDURE capitalreportbydate_proc(IN p_date DATE) //အဝင်လို့သိသာအောင်IN ပေးတာ မပေးလည်းရ (IN = ဝင်လာတဲ့data)
    BEGIN
        SELECT date,name,amount,payment,accounts FROM capitals
        WHERE date = p_date;
    END; //

DELIMITER ;

CALL capitalreportbydate_proc("2023-1-31");
CALL capitalreportbydate_proc("2023-2-28");


=>List all procedures
SHOW PROCEDURE STATUS WHERE DB = "wdf7053"

--------------------------------------------------------------

=>Input and Output Parameters

SELECT * FROM customers;

SELECT COUNT(*) FROM customers
WHERE city = "bago";



DELIMITER //

    CREATE PROCEDURE totalcureportbycity_proc(IN p_city VARCHAR(50),OUT p_totalcu INT)
    BEGIN
        SELECT COUNT(*) INTO p_totalcu
        FROM customers
        WHERE city = p_city;
    END; //

DELIMITER ;

SET @totalcustomers := 0;
SELECT @totalcustomers;

CALL totalcureportbycity_proc('bago',@totalcustomers);


SELECT @totalcustomers;


--------------------------------------------------------------


=>IN / OUT &  INOUT Parameters 

SELECT * FROM customers;

SELECT firstname,lastname,amount,city FROM customers;

SELECT MIN(amount),Max(amount),city FROM customers
WHERE city = "yangon";


DELIMITER //

    CREATE PROCEDURE minmaxcubycity_proc(
        IN p_city VARCHAR(50),
        OUT p_minamount INT,
        OUT p_maxamount INT)
    BEGIN
        SELECT MIN(amount),Max(amount) 
        INTO p_minamount,p_maxamount
        FROM customers
        WHERE city = p_city;
    END; //

DELIMITER ;

SET @min := 0,
@max := 0;
SELECT @min,@max;

CALL minmaxcubycity_proc("yangon",@min,@max);
SELECT @min,@max;
SELECT (@max-@min) AS different;

----------------------------------------------

=>IN / OUT &  INOUT Parameters 


SELECT * FROM customers;

SELECT MIN(age),Max(age),city FROM customers
WHERE city = "yangon";


DELIMITER //

    CREATE PROCEDURE minmaxcuagebycity_proc(
        INOUT p_city VARCHAR(50),
        OUT p_minage INT,
        OUT p_maxage INT)
    BEGIN
        SELECT MIN(age),Max(age) 
        INTO p_minage,p_maxage
        FROM customers
        WHERE city = p_city;
    END; //

DELIMITER ;

SET @city := "bago",
@min := 0,
@max := 0;
SELECT @city,@min,@max;

CALL minmaxcuagebycity_proc(@city,@min,@max);
SELECT @city,@min,@max;

----------------------------------------------






